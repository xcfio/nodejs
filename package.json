{
    "name": "nodejs",
    "version": "0.0.1",
    "main": "index.js",
    "type": "commonjs",
    "author": "xcfio",
    "license": "MIT",
    "scripts": {
        "init": "node --eval \"let pnpm = false; let npm = false; if (!require('node:fs').existsSync('./package.json')) { console.log('\\x1B[34mpackage.json not found. Aborting Initialization\\x1B[39m'); process.exit(1); } try { require('node:child_process').execSync('pnpm --version', { stdio: 'ignore' }); pnpm = true; } catch { null; } try { require('node:child_process').execSync('npm --version', { stdio: 'ignore' }); npm = true; } catch { null; } if (pnpm) { require('node:child_process').execSync('pnpm add --save-dev @types/node', { stdio: 'inherit' }); require('node:child_process').execSync('pnpm add --global tsx esbuild', { stdio: 'inherit' }); } else if (npm) { require('node:child_process').execSync('npm install --save-dev @types/node', { stdio: 'inherit' }); require('node:child_process').execSync('npm install --global tsx esbuild', { stdio: 'inherit' }); } else { console.log('\\x1B[34mNor PNPM or NPM found. Aborting Initialization\\x1B[39m'); process.exit(1); } try { const file = JSON.parse(require('node:fs').readFileSync('./package.json').toString()); delete file.scripts.init; require('node:fs').writeFileSync('./package.json', JSON.stringify(file, null, 4) + '\\n'); process.exit(0); } catch (error) { console.log('\\x1B[34mCleanup Failed. You need to clean package.json manually.\\x1B[39m'); process.exit(0); }\"",
        "fmt": "prettier --config=.prettierrc --write src",
        "fmt:test": "prettier --config=.prettierrc --check src",
        "test": "tsc --noEmit",
        "dev": "tsx watch src/index.ts",
        "build": "esbuild src/index.ts --bundle --outfile=index.js --platform=node --packages=external",
        "start": "node index.js"
    }
}
